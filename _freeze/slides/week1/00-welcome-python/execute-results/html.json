{
  "hash": "be2f3195c7238c70bbc7c7de1bdc4749",
  "result": {
    "markdown": "---\ntitle: Welcome to INFO 523\nsubtitle: Data Mining and Discovery\ntitle-slide-attributes:\n  data-background-image: ../minedata-bg.png\n  data-background-size: 600px, cover\n  data-slide-number: none\nformat: revealjs\nauto-stretch: false\n---\n\n# Course Details\n\n## Teaching team\n\n::: columns\n::: {.column width=\"50%\"}\n### Instructor\n\nDr. Greg Chism\n\nOffice: Harvill 420,\n\n[gchism\\@arizona.edu](mailto:gchism@arizona.edu)\n:::\n:::\n\n## Timetable\n\n-   Lectures (weekly)\n    -   Wednesdays, 1:00 - 2:30 pm - Henry Koffler, RM 216\n-   Meeting dates\n    -   01/10/2023 - 05/05/2023\n\n## Themes: what, why, and how {.smaller}\n\n-   **What:** the techniques\n    -   Specific Types of Mining Techniques like clustering for pattern discovery, decision trees for classification, and association rules for finding relationships.\n    -   Tooling to produce them (e.g., specific Python libraries)\n\n. . .\n\n-   **How:** the process\n    -   Planning and understanding (workflow + pseudo code)\n    -   Pre-process data (e.g., cleaning, transforming, normalizing, etc.)\n    -   Applying Mining Algorithms (e.g., K-means clustering, decision trees, etc.)\n    -   Evaluating and tuning based on model performance\n    -   Interpretation and reporting\n\n. . .\n\n-   **Why:** the theory\n    -   Tie together \"how\" and \"what\" through Python\n    -   Understanding data patterns and predictions\n    -   Ethics and best practices\n\n# But first...\n\n## Show and tell {.smaller}\n\n::: task\n-   Form a small group (2-4 people) with people sitting around you\n\n-   First, introduce yourselves to each other -- name (and proper pronunciation of name), year, major, where are you from, etc.\n\n-   Start what you think makes an effective data mining workflow.\n\n-   Then, discuss what makes an ineffective data mining workflow.\n\n-   Finally, choose the **one** discussion from your group, either \"bad\" or \"good\", and have one team member share the discussion on #general in Slack.\n:::\n\n# Course components\n\n## Course website\n\n::: {.large style=\"text-align: center;\"}\n[datamineaz.org](https://datamineaz.org/)\n:::\n\n::: {.hand style=\"text-align: center;\"}\naka \"the one link to rule them all\"\n:::\n\n::: {style=\"text-align: center;\"}\n\n\n```{=html}\n<iframe width=\"1000\" height=\"400\" src=\"https://datamineaz.org\" frameborder=\"1\" style=\"background:white;\"></iframe>\n```\n\n\n:::\n\n## Lectures {.smaller}\n\n-   In person\n\n-   Attendance is required (as long as you're healthy!)\n\n-   A little bit of everything:\n\n    -   Traditional lecture\n\n    -   Live coding + demos\n\n    -   Short exercises + solution discussion\n\n## Announcements\n\n-   Posted on D2L (Announcements tool) and sent (primarily) via Slack, be sure to check both regularly\n\n-   I'll assume that you've read an announcement by the next \"business\" day\n\n## Diversity and inclusion {.smaller}\n\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students' learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength and benefit.\n\n-   If you have a name that differs from those that appear in your official UArizona records, please let me know!\n\n-   Please let me know your preferred pronouns.\n\n-   If you feel like your performance in the class is being impacted by your experiences outside of class, please don't hesitate to come and talk with me. I want to be a resource for you. If you prefer to speak with someone outside of the course, your advisers and deans are excellent resources.\n\n-   I (like many people) am still in the process of learning about diverse perspectives and identities. If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it.\n\n## Accessibility\n\n-   The [Disability Resource Center](https://drc.arizona.edu/) is available to ensure that students are able to engage with their courses and related assignments.\n\n-   I am committed to making all course materials accessible and I'm always learning how to do this better. If any course component is not accessible to you in any way, please don't hesitate to let me know.\n\n# Assessments\n\n## Attendance + participation (5%)\n\n-   Required throughout the semester in lecture\n\n-   Students who attend at least 80% of the lectures and participate regularly in lecture and/or other course venues (Slack) will receive full credit for this portion of their grade\n\n## Reading quizzes (10%)\n\n-   Online, individual\n-   Cover reading that is due since the previous quiz and up to and including the deadline for the given quiz\n-   Due by 11:59 pm AZ Time on the indicated day on the course schedule\n-   **Lowest dropped**\n\n## Homework assignments (45%)\n\n-   Submitted on GitHub, individual\n-   Some lab sessions allocated to working on homework / getting feedback from your TA\n-   Due by 11:59 pm AZ Time on the indicated day on the course schedule\n-   **Lowest dropped**\n\n## Projects (40%)\n\n-   Submitted on GitHub, team-based\n\n-   Interim deadlines, peer review on content, peer evaluation for team contribution\n\n## Teams\n\n-   Team assignments\n    -   In class exercises and projects\n    -   Assigned different teams for each project\n    -   Peer evaluation during teamwork and after completion\n-   Expectations and roles\n    -   Everyone is expected to contribute equal *effort*\n    -   Everyone is expected to understand *all* code turned in\n    -   Individual contribution evaluated by peer evaluation, commits, etc.\n\n## Project 1 (15%)\n\n-   Same/similar data, different results\n\n-   Presentation and write-up\n\n-   Wrapped up before midterms grades are due\n\n## Project 2 (25%)\n\n-   The world is your oyster! (and more details TBA)\n\n-   New team\n\n-   Presentation and write-up\n\n-   Wrapped up on the final exam date\n\n## Grading {.smaller}\n\nThis course is assessed 100% on your coursework (there is no exam). We will be assessing you based on the following assignments,\n\n| Assignment                 | Type       | Value | n   | Due                                        |\n|:--------------|:--------------|:--------------|:--------------|---------------|\n| Attendance + participation | Individual | 5%    |     |                                            |\n| Reading quizzes            | Individual | 10%   | 7   | \\~ Every other week                        |\n| Homeworks                  | Individual | 45%   | 6   | \\~ Every 2-3 weeks                         |\n| Project 1                  | Team       | 15%   | 1   | \\~ Week 10 + earlier interim deadlines     |\n| Project 2                  | Team       | 25%   | 1   | \\~ Finals week + earlier interim deadlines |\n\n# Course policies\n\n## COVID policies\n\n-   Wear a mask if the university requires\n\n-   Stay home if you're sick and follow guidance\n\n-   Read and follow university guidance\n\n## Late work policy {.smaller}\n\n-   Reading quizzes: Late submissions not accepted\n\n-   Homework assignments:\n\n    -   Late, but next day (before noon): -10% of available points\n    -   Late, but next day (after noon): -20% of available points\n    -   Two days late or later: No credit, and we will not provide written feedback\n\n-   Project presentations: Late submissions not accepted\n\n-   Project write-ups:\n\n    -   Late, but next day (before noon): -10% of available points\n    -   Late, but next day (after noon): -20% of available points\n    -   Two days late or later: No credit, and we will not provide written feedback\n\n-   Peer evaluation:\n\n    -   Late submissions not accepted\n    -   Must turn in peer evaluation if you want your own score from others\n\n## Free passes\n\nThree \"free passes\" for the semester\n\n::: incremental\n-   1 pass = 1 whole day extension\n\n-   Passes can be stacked up to 3\n\n-   Once they're gone, that's it...\n\n-   ...so use them wisely!\n\n-   *Hint: like during midterms...*\n:::\n\n## Collaboration policy\n\n-   Only work that is clearly assigned as team work should be completed collaboratively (Projects)\n\n-   Reading quizzes must be completed individually, you may not discuss answers with teammates, clarification questions should only be asked to myself and the TAs\n\n-   Homework assignments must be completed individually. You may not directly share answers / code with others, however you are welcome to discuss the problems in general and ask for advice\n\n## Sharing / reusing code policy\n\n-   We are aware that a huge volume of code is available on the web, and many tasks may have solutions posted\n\n-   Unless explicitly stated otherwise, this course's policy is that you may make use of any online resources (e.g. RStudio Community, StackOverflow, etc.) but you must explicitly cite where you obtained any code you directly use or use as inspiration in your solution(s).\n\n-   Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism, regardless of source\n\n## ChatGPT / AI policy\n\n-   We are additionally aware of the potential code AI for coding (your instructor taught a workshop on it...).\n\n-   While these tools are amazing, learners should be aware of the impacts that using such tools can have on core competency. David Humphrey, a computer science professor, [**wrote about ChatGPT and its potentially negative impacts on core learning.**](https://blog.humphd.org/cheatgpt/) It is a good read about the pitfalls of using generative AI in an educational context.\n\n-   By using a generative AI, learners may miss the opportunity to discover how something works and why things are done that way.\n\n## Academic integrity\n\n> To uphold the [UArizona iSchool Community Standard](https://ischool.arizona.edu/sites/ischool.arizona.edu/files/iSchool%20Policy%20on%20Academic%20Integrity%20in%20Computing%202023%20-%20approved%20by%20faculty%20vote%20April%202023.pdf#:~:text=UArizona%20iSchool%20Instructors%20are%20expected%20to%20help%20students,prohibited%20in%20some%20courses%20are%20allowed%20in%20others.):\n\n> -   I will not lie, cheat, or steal in my academic endeavors;\n> -   I will conduct myself honorably in all my endeavors; and\n> -   I will act if the Standard is compromised.\n\n## \n\n<br><br><br>\n\n::: {.large .hand style=\"text-align: center\"}\nmost importantly:\n\nask if you're not sure if something violates a policy!\n:::\n\n# Support\n\n## Office hours {.smaller}\n\n-   Greg:\n\n    -   Mondays 1 - 2 pm - Harvill 420\n\n        -   Except Mon, Jan 15 (MLK Holiday)\n\n        -   Any other exceptions will be announced in class / by email\n\n    -   By appointment - Zoom or Harvill 420\n\n-   \\+ lots more resources listed on the syllabus!\n\n## Wellness\n\nI want to make sure that you learn everything you were hoping to learn from this class. If this requires flexibility, please don't hesitate to ask.\n\n-   You never owe me personal information about your health (mental or physical) but you're always welcome to talk to me. If I can't help, I likely know someone who can.\n\n-   I want you to learn lots of things from this class, but I primarily want you to stay healthy, balanced, and grounded.\n\n# Course Tools\n\n## JupyterLab\n\n::: {.large style=\"text-align: center;\"}\n<https://jupyter.org/try>\n:::\n\n-   Browser based JupyterLab instance(s)\n\n-   Requires internet connection to access\n\n-   Provides consistency in hardware and software environments\n\n-   Local Python and JupyterLab installations are fine but we will not guarantee support\n\n## GitHub {.smaller}\n\n::: {.large style=\"text-align: center;\"}\n<https://github.com/INFO523-S24>\n:::\n\n-   All of your work and your membership (enrollment) in the organization is private\n\n-   Each assignment is a private repo on GitHub, I distribute the assignments on GitHub and you submit them there\n\n-   Feedback on assignments is given as GitHub issues, scores recorded on D2L Gradebook\n\n::: task\nSend me your Github account names on Slack, later this week you will be invited to the course organization.\n:::\n\n## Username advice {.smaller}\n\n::: hand\nin case you don't yet have a GitHub account...\n:::\n\nSome brief advice about selecting your account names (particularly for GitHub),\n\n-   Incorporate your actual name! People like to know who they're dealing with and makes your username easier for people to guess or remember\n\n-   Reuse your username from other contexts, e.g., Twitter or Slack\n\n-   Pick a username you will be comfortable revealing to your future boss\n\n-   Shorter is better than longer, but be as unique as possible\n\n-   Make it timeless. Avoid highlighting your current university, employer, or place of residence\n\n## Slack {.smaller}\n\n-   Online forum for asking and answering questions\n\n-   Private repo in the course organization\n\n-   You will need to join the course organization for access\n\n-   Ask **and answer** questions related to course logistics, assignment, etc. here\n\n-   Personal questions (e.g., extensions, illnesses, etc.) should be via email to me\n\n-   Once you join, browse the channels to make sure you're posting questions in the right channel, update your profile with your name, photo/avatar of you that matches your GitHub profile, and your pronouns\n\n-   **Unfortunately** Slack is **not** the best place to ask coding questions, but it's a great place for real-time connection and collaboration\n\n::: task\nDemo on Wednesday for asking good questions with proper code formatting.\n:::\n\n## Before the weekend\n\n1.  Create a GitHub account if you don't have one\n\n2.  Read the [syllabus](https://datamineaz.org/course-syllabus)\n\n3.  Make sure you can use JupyterLab\n\n    1.  If not, install Python and JupyterLab (or VS Code)\n\n# Quarto\n\n# What is Quarto?\n\n## Quarto ...\n\n-   is a new, open-source, scientific, and technical publishing system.\n\n![Artwork from \"Hello, Quarto\" keynote by Julia Lowndes and Mine Çetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst.](images/horst_quarto_schematic.png){fig-alt=\"A schematic representing the multi-language input (e.g. Python, R, Observable, Julia) and multi-format output (e.g. PDF, html, Word documents, and more) versatility of Quarto.\" fig-align=\"center\"}\n\n## Quarto\n\nWith Quarto you can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books and more.\n\n. . .\n\n<br>\n\n*just like R Markdown...*\n\n. . .\n\n<br>\n\nbut not *just like* it, there's more to it...\n\n## Quarto unifies + extends R Markdown\n\n::: incremental\n-   Consistent implementation of attractive and handy features across outputs: tabsets, code-folding, syntax highlighting, etc.\n-   More accessible defaults as well as better support for accessibility\n-   Support for other languages like Python, Julia, Observable, and more via Jupyter engine for executable code chunks.\n:::\n\n## A tour of Quarto\n\n<br><br>\n\n::: {.hand-blue-large style=\"text-align: center;\"}\nSit back and enjoy!\n:::\n\n## Git + GitHub\n\n::: columns\n::: {.column width=\"50%\"}\n![](images/git-icon-logo.png){fig-align=\"center\" width=\"150\"}\n\n::: incremental\n-   **Version Control System**\n\n-   **Local and Remote Repositories**\n\n-   **Branching and Merging**\n:::\n:::\n\n::: {.column width=\"50%\"}\n![](images/GitHub-Symbol.png){fig-align=\"center\" width=\"250\"}\n\n::: incremental\n-   **Code Hosting Platform**\n\n-   **Open Source and Private Projects**\n\n-   **Community and Networking**\n:::\n:::\n:::\n\n## Git setup\n\n\n\n```{=html}\n<iframe width=\"1000\" height=\"400\" src=\"https://datavizaz.org/computing/computing-git.html\" frameborder=\"1\" style=\"background:white;\"></iframe>\n```\n\n\n# Let's setup! {style=\"text-align: center;\"}\n\n# Intro to Python {style=\"text-align: center;\"}\n\n![](images/python.jpeg){fig-align=\"center\" width=\"200\"}\n\n## What is Python?\n\n::: incremental\n-   \"Python is the second best language at everything.\" - **Van Lindberg**\n\n-   Versatile and popular programming language with simple syntax\n\n-   Large collection of frameworks and libraries\n\n-   Large, active community\n\n-   Widely used for web development, data analysis, artificial intelligence, scientific computing, and more.\n:::\n\n## Basic syntax and comments\n\n::: {.cell execution_count=1}\n``` {.python .cell-code}\n# This is a comment\nprint(\"Hello, Python!\")  # This prints a message\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello, Python!\n```\n:::\n:::\n\n\n::: incremental\n-   Indentation for code blocks (instead of brackets)\n\n-   Comments start with a `#` (used to explain code)\n:::\n\n## Variables and data types\n\n::: {.cell execution_count=2}\n``` {.python .cell-code}\n# Integer\nx = 5\n\n# Float\ny = 3.14\n\n# String\nname = \"Python\"\n\n# Boolean\nis_easy = True\n```\n:::\n\n\n::: incremental\n-   Variables store data values.\n\n-   Python uses integers (whole numbers), floats (non-whole numbers), strings (text), and booleans (true/false).\n:::\n\n## Basic operations\n\n::: {.cell execution_count=3}\n``` {.python .cell-code}\n# Arithmetic Operations\na = 10\nb = 3\nsum = a + b\ndifference = a - b\nproduct = a * b\nquotient = a / b\n\n# Logical Operations\nis_greater = a > b\nis_equal = (a == b)\n```\n:::\n\n\n::: incremental\n-   Python supports various arithmetic and logical operations.\n:::\n\n## Control structures: if-else\n\n::: {.cell execution_count=4}\n``` {.python .cell-code}\nage = 20\nif age >= 18:\n    print(\"Adult\")\nelse:\n    print(\"Minor\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAdult\n```\n:::\n:::\n\n\n::: incremental\n-   Python uses **`if`**, **`elif`**, and **`else`** for decision-making.\n:::\n\n## Loops\n\n::: {.cell execution_count=5}\n``` {.python .cell-code}\n# For Loop\nfor i in range(5):\n    print(i)\n\n# While Loop\nj = 0\nwhile j < 5:\n    print(j)\n    j += 1\n```\n:::\n\n\n::: incremental\n-   Python has two types of loops: **`for`** and **`while`**.\n:::\n\n## Lists\n\n::: {.cell execution_count=6}\n``` {.python .cell-code}\nfruits = [\"apple\", \"banana\", \"cherry\"]\nprint(fruits[0])  # Accessing the first item\n```\n:::\n\n\n::: incremental\n-   Lists store multiple items in a single variable.\n-   Access elements using index (starting at 0).\n:::\n\n## Functions\n\n::: {.cell execution_count=7}\n``` {.python .cell-code}\ndef greet(name):\n    return \"Hello \" + name\n\nprint(greet(\"Alice\"))\n```\n:::\n\n\n::: incremental\n-   Functions perform specific tasks.\n\n-   Call a function with its name and arguments.\n:::\n\n## Conclusion\n\n::: incremental\n-   Python is a versatile and user-friendly language.\n\n-   Ideal for beginners and widely used.\n\n-   Encourages readable and maintainable code.\n\n-   Extensive libraries and community support.\n:::\n\n",
    "supporting": [
      "00-welcome-python_files/figure-html"
    ],
    "filters": [],
    "includes": {}
  }
}