{
  "hash": "f1d93d946b9f47752cfed974f2a0b405",
  "result": {
    "engine": "jupyter",
    "markdown": "---\ntitle: Welcome to {{< var course.number >}}\nsubtitle: \"{{< var course.name >}}\"\nauthor: \"{{< var slides.author >}}\"\ninstitute: \"{{< var slides.institute >}}\"\nfooter: \"{{< var slides.footer >}}\"\ntitle-slide-attributes:\n  data-background-image: ../minedata-bg.png\n  data-background-size: 600px, cover\n  data-slide-number: none\nformat: \n  revealjs:\n    incremental: true\nauto-stretch: false\n---\n\n# Course Details\n\n## Themes: What\n\n-   **What:** the techniques\n    -   Specific Types of Mining Techniques like clustering for pattern discovery, decision trees for classification, and association rules for finding relationships.\n    -   Tooling to produce them (e.g., specific Python libraries)\n\n## Themes: How\n\n-   **How:** the process\n    -   Planning and understanding (workflow + pseudo code)\n    -   Pre-process data (e.g., cleaning, transforming, normalizing, etc.)\n    -   Applying Mining Algorithms (e.g., K-means clustering, decision trees, etc.)\n    -   Evaluating and tuning based on model performance\n    -   Interpretation and reporting\n\n## Themes: Why\n\n-   **Why:** the mechanism\n    -   Tie together \"how\" and \"what\" through Python\n    -   Understanding data patterns and predictions\n    -   Ethics and best practices\n\n## Teaching team\n\n::::: columns\n::: {.column width=\"50%\"}\n### Instructor\n\n{{< var instructor.name >}}\n\nOffice: {{< var instructor.office >}},\n\n[{{< var instructor.email >}}](mailto:{{< var instructor.email >}})\n:::\n\n::: {.column width=\"50%\"}\n### Teaching Assistant\n\n{{< var ta.name >}}\n\n[{{< var ta.email >}}](mailto:{{< var ta.email >}})\n:::\n:::::\n\n## Timetable\n\n-   Lectures (weekly)\n    -   {{< var class.day >}}, {{< var class.time >}} - {{< var class.location >}}\n-   Meeting dates\n    -   {{< var semester.start_date >}} - {{< var semester.end_date >}}\n\n# But First...\n\n## Show and Tell\n\n::: task\n-   **Introduction (by Monday 11:59pm):** Post a brief introduction in the #introductions channel on Slack - your name (with pronunciation guide if helpful), year, major, location/timezone, and one thing you're excited to learn about data mining\n\n-   **Discussion (by Wednesday 11:59pm):** In the #discussion channel, start a thread about: **What could be a good scenario for data mining?** Then, choose one of the two topics:\n\n    -   What makes an effective data mining workflow?\n    -   What makes an ineffective data mining workflow?\n\n-   **Engagement (by Thursday 11:59pm):** Reply to at least 2 other posts\n:::\n\n# Course Components\n\n## Course Website\n\n::: {.large style=\"text-align: center;\"}\n[{{< var website.url >}}](https://{{< var website.url >}}/)\n:::\n\n::: {.hand style=\"text-align: center;\"}\naka \"the one link to rule them all\"\n:::\n\n::: {style=\"text-align: center;\"}\n```{=html}\n<iframe width=\"1000\" height=\"400\" src=\"https://{{< var website.url >}}\" frameborder=\"1\" style=\"background:white;\"></iframe>\n```\n:::\n\n## Lectures\n\n-   Asynchronous online format, watch at your pace\n\n-   Active participation is expected throughout the semester\n\n-   Discussions and Q&A are expected and encouraged in the Slack channel, more details to come\n\n## Division of Labor\n\n-   Will reuse some of Dr. Greg Chism's recordings\n\n-   Dr. Chism designed the class and has been teaching for many semesters at {{< var university.short_name >}}\n\n-   I will record ad-hoc sections:\n\n    -   To discuss our usage of Generative AI in data mining\n\n    -   If some of you want to learn an extra technique (email me!)\n\n    -   To address common issues among homework/project submissions\n\n-   I will provide timely support on Slack channel\n\n## Announcements\n\n-   Posted on D2L (Announcements tool) and sent (primarily) via Slack, be sure to check both regularly\n\n-   I'll assume that you've read an announcement by the next \"business\" day\n\n## A Course for Everyone\n\nIt is my intent that students from all diverse backgrounds and perspectives be well-served by this course, that students' learning needs be addressed both in and out of class, and that the diversity that the students bring to this class be viewed as a resource, strength and benefit.\n\n-   If you have a name that differs from those that appear in your official {{< var university.short_name >}} records, please let me know!\n\n-   Please let me know your preferred pronouns.\n\n## A Course for Everyone\n\n-   If you feel like your performance in the class is being impacted by your experiences outside of class, please don't hesitate to come and talk with me. I want to be a resource for you. If you prefer to speak with someone outside of the course, your advisers and deans are excellent resources.\n\n-   If something was said in class (by anyone) that made you feel uncomfortable, please talk to me about it.\n\n## Accessibility\n\n-   The [Disability Resource Center](https://drc.arizona.edu/) is available to ensure that students are able to engage with their courses and related assignments.\n\n-   I am committed to making all course materials accessible and I'm always learning how to do this better. If any course component is not accessible to you in any way, please don't hesitate to let me know.\n\n# Assessments\n\n-   All deadlines are on 11:59pm MST.\n-   The course schedule is designed so you can easily remember:\n    -   Monday: Suggested time for watching the lecture. Quiz deadlines.\n    -   Thursday: Assignment deadlines.\n\n## Participation (10%)\n\n-   Required throughout the semester in lecture\n-   Students who participate regularly in course venues (especially Slack) will receive full credit for this portion of their grade\n\n## Reading Quizzes (10%)\n\n-   Online, individual\n-   Deadline typically on Mondays\n-   5 quizzes throughout the semester (2% each)\n-   Cover reading that is due since the previous quiz\n\n## Homework Assignments (40%)\n\n-   Submitted on GitHub, individual\n-   Deadline typically on Thursdays\n-   Co-working sessions based on your availability\n-   Office hours to help with your needs\n\n## The Final Project (40%)\n\n-   Submitted on GitHub, team-based\n-   Open-ended, choose your own adventure\n-   Deadline typically on Thursdays\n-   Presentation + Writeup\n\n## The Final Project (40%)\n\n-   Milestone deadlines:\n    -   Submitting your idea\n    -   Peer review on the proposal\n    -   Instructor feedback on the proposal\n    -   Peer evaluation for team contribution\n\n## Teams\n\n-   Team assignments\n    -   In class exercises and projects\n    -   Assigned different teams for each project\n    -   Peer evaluation during teamwork and after completion\n-   Expectations and roles\n    -   Everyone is expected to contribute equal *effort*\n    -   Everyone is expected to understand *all* code turned in\n    -   Individual contribution evaluated by peer evaluation, commits, etc.\n\n## Grading\n\nThis course is assessed 100% on your coursework (there is no exam). We will be assessing you based on the following assignments,\n\n**Note:** Please refer to the course syllabus and schedule for specific dates and detailed requirements.\n\n| Assignment                 | Type       | Value | n   | Due                      |\n|:--------------|:--------------|:--------------|:--------------|---------------|\n| Attendance + participation | Individual | 10%   |     | Throughout semester      |\n| Reading quizzes            | Individual | 10%   | 5   | \\~ Every other week      |\n| Homeworks                  | Individual | 40%   | 5   | \\~ Every 2-3 weeks       |\n| Final Project              | Team       | 40%   | 1   | Milestones + Finals week |\n\n# Course Policies\n\n## Late Work Policy\n\n-   Reading quizzes: Late submissions not accepted\n\n-   Homework assignments:\n\n    -   Late, but next day (before noon): -10% of available points\n    -   Late, but next day (after noon): -20% of available points\n    -   Two days late or later: No credit, and we will not provide written feedback\n\n-   Peer evaluation:\n\n    -   Late submissions not accepted\n    -   Must turn in peer evaluation if you want your own score from others\n\n## Late Work Policy\n\n-   Project presentations: Late submissions not accepted\n\n-   Project write-ups:\n\n    -   Late, but next day (before noon): -10% of available points\n    -   Late, but next day (after noon): -20% of available points\n    -   Two days late or later: No credit, and we will not provide written feedback\n\n## Free Passes\n\nThree \"free passes\" for the semester\n\n::: incremental\n-   1 pass = 1 whole day extension\n\n-   Passes can be stacked up to 3\n\n-   Write to my email to use it\n\n-   Once they're gone, that's it...so use them wisely!\n\n-   *Hint: like during midterms...*\n:::\n\n## Collaboration Policy\n\n-   Only work that is clearly assigned as team work should be completed collaboratively (Projects)\n\n-   Reading quizzes must be completed individually, you may not discuss answers with teammates, clarification questions should only be asked to myself and the TAs\n\n-   Homework assignments must be completed individually. You may not directly share answers / code with others, however you are welcome to discuss the problems in general and ask for advice\n\n## Sharing / Reusing Code Policy\n\n-   We are aware that many tasks may have solutions posted online\n\n-   Unless explicitly stated otherwise, this course's policy is that you may make use of any online resources (e.g. StackOverflow, etc.) but you must explicitly cite where you obtained any code you directly use or use as inspiration in your solution(s).\n\n-   Any recycled code that is discovered and is not explicitly cited will be treated as plagiarism, regardless of source\n\n## ChatGPT / AI policy\n\n-   **AI is Sometimes Permitted** - This class encourages you to use/experiment with Generative AI in all assignments and projects\n\n-   **Exception:** Quizzes - AI use is not permitted for quizzes as they serve as your own checkpoint and reflection\n\n-   **Requirements when using AI:**\n\n    -   Always maintain control by reviewing, criticizing, and steering AI responses\n    -   Clearly state which AI tools you used and how you incorporated their output\n    -   Write reflections about your workflow and AI's responses (graded component)\n\n-   Remember: AI tools won't be responsible for your grades or learning - you are!\n\n## Academic Integrity\n\n> To uphold the [{{< var university.short_name >}} iSchool Community Standard](https://ischool.arizona.edu/sites/ischool.arizona.edu/files/iSchool Policy on Academic Integrity in Computing 2023 - approved by faculty vote April 2023.pdf#:~:text={{< var university.short_name >}} iSchool Instructors are expected to help students,prohibited in some courses are allowed in others.):\n\n> -   I will not lie, cheat, or steal in my academic endeavors;\n> -   I will conduct myself honorably in all my endeavors; and\n> -   I will act if the Standard is compromised.\n\n## \n\n<br><br><br>\n\n::: {.large .hand style=\"text-align: center\"}\nmost importantly:\n\nask if you're not sure if something violates a policy!\n:::\n\n# Support\n\n## Office Hours\n\n-   {{< var instructor.name >}}:\n\n    -   {{< var instructor.office_hours.day >}}, {{< var instructor.office_hours.time >}} - {{< var instructor.office_hours.location >}}\n\n        -   Except for university holidays\n\n        -   Any exceptions will be announced via Slack / D2L\n\n    -   By appointment - Zoom or {{< var instructor.office >}}\n\n-   \\+ lots more resources listed on the syllabus!\n\n## Wellness\n\nI want to make sure that you learn everything you were hoping to learn from this class. If this requires flexibility, please don't hesitate to ask.\n\n-   You never owe me personal information about your health (mental or physical) but you're always welcome to talk to me. If I can't help, I likely know someone who can.\n\n-   I want you to learn lots of things from this class, but I primarily want you to stay healthy, balanced, and grounded.\n\n# Course Tools\n\n## Visual Studio Code\n\n::: {.large style=\"text-align: center;\"}\n<https://code.visualstudio.com/>\n:::\n\n-   Full-featured IDE with native Jupyter Notebook support\n\n-   Integrated Python debugger with inline variable values\n\n-   Built-in variable viewer and data explorer for notebooks\n\n-   Supports both local and remote development (including GitHub Codespaces)\n\n## GitHub Codespaces\n\n::: {.large style=\"text-align: center;\"}\n<https://code.visualstudio.com/docs/remote/codespaces>\n:::\n\n-   Visual Studio Code in your browser\n\n-   No need to set up Python dependencies\n\n-   Automatic integration with GitHub\n\n## GitHub\n\n::: {.large style=\"text-align: center;\"}\n\\<{{< var links.github_org >}}\\>\n:::\n\n-   All of your work and your membership (enrollment) in the organization is private\n\n-   Each assignment is a private repo on GitHub, I distribute the assignments on GitHub and you submit them there\n\n-   Feedback on assignments is given as GitHub issues, scores recorded on D2L Gradebook\n\n::: task\nSend me your Github account names on Slack, later this week you will be invited to the course organization.\n:::\n\n## Username advice\n\n::: hand\nin case you don't yet have a GitHub account...\n:::\n\nSome brief advice about selecting your account names (particularly for GitHub),\n\n-   Incorporate your actual name! People like to know who they're dealing with and makes your username easier for people to guess or remember\n\n-   Reuse your username from other contexts, e.g., Twitter or Slack\n\n-   Pick a username you will be comfortable revealing to your future boss\n\n-   Shorter is better than longer, but be as unique as possible\n\n-   Make it timeless. Avoid highlighting your current university, employer, or place of residence\n\n## Slack\n\n-   Online forum for asking and answering questions\n\n-   Private repo in the course organization\n\n-   You will need to join the course organization for access\n\n-   Ask **and answer** questions related to course logistics, assignment, etc. here\n\n-   Personal questions (e.g., extensions, illnesses, etc.) should be via email to me\n\n-   Once you join, browse the channels to make sure you're posting questions in the right channel, update your profile with your name, photo/avatar of you that matches your GitHub profile, and your pronouns\n\n## Before Week 2\n\n1.  Create a GitHub account if you don't have one\n\n2.  Read the [syllabus](https://{{< var website.url >}}/course-syllabus)\n\n3.  Make sure you can use Codespaces\n\n    1.  If not, install Python and VS Code\n\n# Quarto\n\n# What is Quarto?\n\n## Quarto ...\n\n-   is a new, open-source, scientific, and technical publishing system.\n\n![Artwork from \"Hello, Quarto\" keynote by Julia Lowndes and Mine Çetinkaya-Rundel, presented at RStudio Conference 2022. Illustrated by Allison Horst.](images/horst_quarto_schematic.png){fig-alt=\"A schematic representing the multi-language input (e.g. Python, R, Observable, Julia) and multi-format output (e.g. PDF, html, Word documents, and more) versatility of Quarto.\" fig-align=\"center\"}\n\n## Quarto\n\nWith Quarto you can weave together narrative text and code to produce elegantly formatted output as documents, web pages, blog posts, books and more.\n\n. . .\n\n<br>\n\n*just like R Markdown...*\n\n. . .\n\n<br>\n\nbut not *just like* it, there's more to it...\n\n## Quarto unifies + extends R Markdown\n\n::: incremental\n-   Consistent implementation of attractive and handy features across outputs: tabsets, code-folding, syntax highlighting, etc.\n-   More accessible defaults as well as better support for accessibility\n-   Support for other languages like Python, Julia, Observable, and more via Jupyter engine for executable code chunks.\n:::\n\n## A tour of Quarto\n\n<br><br>\n\n::: {.hand-blue-large style=\"text-align: center;\"}\nSit back and enjoy!\n:::\n\n## Git + GitHub\n\n::::::: columns\n:::: {.column width=\"50%\"}\n![](images/git-icon-logo.png){fig-align=\"center\" width=\"150\"}\n\n::: incremental\n-   **Version Control System**\n\n-   **Local and Remote Repositories**\n\n-   **Branching and Merging**\n:::\n::::\n\n:::: {.column width=\"50%\"}\n![](images/GitHub-Symbol.png){fig-align=\"center\" width=\"250\"}\n\n::: incremental\n-   **Code Hosting Platform**\n\n-   **Open Source and Private Projects**\n\n-   **Community and Networking**\n:::\n::::\n:::::::\n\n## Git setup\n\n```{=html}\n<iframe width=\"1000\" height=\"400\" src=\"https://{{< var website.url >}}/computing/computing-git.html\" frameborder=\"1\" style=\"background:white;\"></iframe>\n```\n\n# Let's setup! {style=\"text-align: center;\"}\n\n# Intro to Python {style=\"text-align: center;\"}\n\n![](images/python.jpeg){fig-align=\"center\" width=\"200\"}\n\n## What is Python?\n\n::: incremental\n-   \"Python is the second best language at everything.\" - **Van Lindberg**\n\n-   Versatile and popular programming language with simple syntax\n\n-   Large collection of frameworks and libraries\n\n-   Large, active community\n\n-   Widely used for web development, data analysis, artificial intelligence, scientific computing, and more.\n:::\n\n## Basic syntax and comments\n\n::: {#ccd2e00b .cell execution_count=2}\n``` {.python .cell-code}\n# This is a comment\nprint(\"Hello, Python!\")  # This prints a message\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nHello, Python!\n```\n:::\n:::\n\n\n::: incremental\n-   Indentation for code blocks (instead of brackets)\n\n-   Comments start with a `#` (used to explain code)\n:::\n\n## Variables and data types\n\n::: {#f6f76e45 .cell execution_count=3}\n``` {.python .cell-code}\n# Integer\nx = 5\n\n# Float\ny = 3.14\n\n# String\nname = \"Python\"\n\n# Boolean\nis_easy = True\n```\n:::\n\n\n::: incremental\n-   Variables store data values.\n\n-   Python uses integers (whole numbers), floats (non-whole numbers), strings (text), and booleans (true/false).\n:::\n\n## Basic operations\n\n::: {#b6f643ae .cell execution_count=4}\n``` {.python .cell-code}\n# Arithmetic Operations\na = 10\nb = 3\nsum = a + b\ndifference = a - b\nproduct = a * b\nquotient = a / b\n\n# Logical Operations\nis_greater = a > b\nis_equal = (a == b)\n```\n:::\n\n\n::: incremental\n-   Python supports various arithmetic and logical operations.\n:::\n\n## Control structures: if-else\n\n::: {#e6c03806 .cell execution_count=5}\n``` {.python .cell-code}\nage = 20\nif age >= 18:\n    print(\"Adult\")\nelse:\n    print(\"Minor\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nAdult\n```\n:::\n:::\n\n\n::: incremental\n-   Python uses **`if`**, **`elif`**, and **`else`** for decision-making.\n:::\n\n## Loops\n\n::: {#7a30545b .cell execution_count=6}\n``` {.python .cell-code}\n# For Loop\nfor i in range(5):\n    print(i)\n\n# While Loop\nj = 0\nwhile j < 5:\n    print(j)\n    j += 1\n```\n:::\n\n\n::: incremental\n-   Python has two types of loops: **`for`** and **`while`**.\n:::\n\n## Lists\n\n::: {#5fcc74b3 .cell execution_count=7}\n``` {.python .cell-code}\nfruits = [\"apple\", \"banana\", \"cherry\"]\nprint(fruits[0])  # Accessing the first item\n```\n:::\n\n\n::: incremental\n-   Lists store multiple items in a single variable.\n-   Access elements using index (starting at 0).\n:::\n\n## Functions\n\n::: {#4d92933e .cell execution_count=8}\n``` {.python .cell-code}\ndef greet(name):\n    return \"Hello \" + name\n\nprint(greet(\"Alice\"))\n```\n:::\n\n\n::: incremental\n-   Functions perform specific tasks.\n\n-   Call a function with its name and arguments.\n:::\n\n## Conclusion\n\n::: incremental\n-   Python is a versatile and user-friendly language.\n\n-   Ideal for beginners and widely used.\n\n-   Encourages readable and maintainable code.\n\n-   Extensive libraries and community support.\n:::\n\n",
    "supporting": [
      "00-welcome-python_files/figure-revealjs"
    ],
    "filters": [],
    "includes": {}
  }
}